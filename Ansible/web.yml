- name: Setup frontend
  hosts: web_servers
  gather_facts: yes
  become: yes
  vars_files:
    - ./group_vars/all/vault.yml
  tasks:

    - name: Install required system packages
      apt:
        pkg:
          - python3-pip
        state: latest
        update_cache: true
      when: ansible_facts.packages is undefined or 'python3-pip' not in ansible_facts.packages

    - name: Check if Docker setup script exists
      stat:
        path: /tmp/setup_docker.sh
      register: script_stat

    - name: Copy Docker setup script to remote if not exists
      copy:
        src: ./setup_docker.sh
        dest: /tmp/setup_docker.sh
        mode: '0755'
      when: not script_stat.stat.exists

    - name: Execute Docker setup script
      shell: /tmp/setup_docker.sh
      register: script_output
      when: not script_stat.stat.exists

    - name: Install Docker SDK for Python
      pip:
        name: docker
        state: present

    - name: Create directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      loop:
        - /web
        - /web/nginx
        - /web/frontend
    
    # - name: Change directory to where SSL certificates are located
    #   shell: scp /etc/letsencrypt/live/test.fourthestate.app/* root{{web_servers}}:/etc/letsencrypt/live/test.fourthestate.app
    - name: Copy SSL certificates to web servers
      shell: "scp /etc/letsencrypt/live/test.fourthestate.app/* root@{{ item }}:/etc/letsencrypt/live/test.fourthestate.app"
      with_items: "{{ groups['web_servers'] }}"
      delegate_to: localhost

    - name: Upload Nginx configuration
      copy:
        dest: /web/nginx/default.conf
        content: |
          server {
            listen 80;
            listen [::]:80;
            server_name test.fourthestate.app;
            
            location / {
              proxy_pass http://frontend:3000;
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection 'upgrade';
              proxy_set_header Host $host;
            }
            
            location ~^/socket\.io {
              proxy_pass http://{{ groups['db_servers'][0] }};
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto https;
            }

            location ~ ^/members/webhooks/stripe/ {
              proxy_pass http://{{ groups['db_servers'][0] }};
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Host $host;
              proxy_set_header X-Forwarded-Proto https;
            }

            location ~*^/(ghost|p|members|content)/ {
              proxy_pass http://{{ groups['db_servers'][0] }};
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto https;
            }
            listen 443 ssl;
            ssl_certificate /etc/letsencrypt/live/test.fourthestate.app/fullchain.pem;
            ssl_certificate_key /etc/letsencrypt/live/test.fourthestate.app/privkey.pem;
          }
    
    - name: Upload Frontend configuration
      copy:
        dest: /web/frontend/.env
        content: |
          NEXT_PUBLIC_GHOST_API_URL='http://{{ groups['web_servers_public'][0] }}'
          NEXT_PUBLIC_GHOST_API_KEY='{{front_public_api_key}}'

          NEXT_PUBLIC_GOOGLE_CLIENT_ID='21007502974-i97qj0ctd5v4qbaukbptk7dd36fbph3c.apps.googleusercontent.com'
          NEXT_PUBLIC_MICROSOFT_CLIENT_ID='f704b78c-637c-4b2f-b851-3bdbdc8e8f66'
          NEXT_PUBLIC_FACEBOOK_CLIENT_ID='969714300971210'

          NEXT_PUBLIC_APPLE_CLIENT_ID='com.fourthestate.app'
          NEXT_PUBLIC_APPLE_REDIRECT_URI='https://dev-mediaplatform.fourthestate.app'

          NEXT_PUBLIC_DOMAIN='164.90.243.167'
    
    - name: Upload Docker Compose configuration
      copy:
        dest: /web/compose.yml
        content: |
          services:
            frontend:
              container_name: frontend
              image: "gitlab.fourthestate.app:5050/mp/mediaplatform-frontend-app/autodeploy:latest"
              restart: always
              ports:
                - "3000:3000"
              environment:
                - NODE_ENV=production
              volumes:
                - ./frontend/.env:/app/.env
              networks:
                - webnet
            nginx:
              container_name: nginx
              image: nginx:latest
              restart: always
              volumes:
                - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
                - ./nginx/ssl/:/etc/letsencrypt/:ro
                - ./nginx/ssl/:/etc/nginx/ssl/:ro
              ports:
                - "80:80"
                - "443:443"
              networks:
                - webnet
          networks:
            webnet:
              driver: bridge

    - name: Log into Docker registry
      docker_login:
        registry: "{{ docker_registry }}"
        username: "{{ registry_username }}"
        password: "{{ registry_password }}"
        reauthorize: yes
      register: login_result
      ignore_errors: yes

    - name: Debug Docker login result
      debug:
        var: login_result

    - name: Start all services
      shell: |
        cd /web
        docker compose pull
        docker compose up -d